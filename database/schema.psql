-- NOTE
-- pgcrpyto is assumed to be enabled in public needing superuser access
-- CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--------------------------- TABLES DEFINITION
-------------------------------- -------------------------------- -------------------------------- 

--------------------------- ENTITTIES

CREATE TABLE entities (
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id text NOT NULL ,
    address text NOT NULL,
    email text,
    name text,
    managersPublicKeys text[] NOT NULL
);

CREATE INDEX entityId_hash ON entities USING hash (id);

ALTER TABLE ONLY entities
    ADD CONSTRAINT entity_pkey PRIMARY KEY (id);

ALTER TABLE ONLY entities
    ADD CONSTRAINT entity_address_key UNIQUE (address);

--------------------------- MEMBERS

CREATE TYPE origin AS ENUM (
    'Token',
    'Form',
    'DB'
);

CREATE TABLE member (
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    entityId text,
    publicKey text, 
    digestedPublicKey text, 
    address text,
    firstName text,
    lastName text,
    email text,
    phone text,
    dateOfBirth timestamp with time zone,
    origin origin,
    consented boolean DEFAULT false NOT NULL,
    verified timestamp with time zone,
    pushTokenArray text[]
    --TODO: CONSTRAINT sizes of address
);

ALTER TABLE ONLY member
    ADD CONSTRAINT member_pkey PRIMARY KEY (id);

ALTER TABLE ONLY member
    ADD CONSTRAINT member_publicKey_key UNIQUE (publicKey);

ALTER TABLE ONLY member
    ADD CONSTRAINT member_digestedPublicKey_key UNIQUE (digestedPublicKey);

ALTER TABLE ONLY member
    ADD CONSTRAINT member_entityId_fkey FOREIGN KEY (entityId) REFERENCES entities(id);


CREATE INDEX memberId_hash ON member USING hash (id);


--------------------------- FILTERS

CREATE TABLE filters (
    id serial NOT NULL,
    entityId text NOT NULL,
    name text NOT NULL,
    filters jsonb NOT NULL
);

ALTER TABLE ONLY filters
    ADD CONSTRAINT filters_pkey PRIMARY KEY (id);

ALTER TABLE ONLY filters
    ADD CONSTRAINT filters_entityId_fkey FOREIGN KEY (entityId) REFERENCES entities(id);

CREATE INDEX filterId_hash ON filters USING hash (id);


--------------------------- CENSUS

CREATE TABLE census (
    updated timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    filterId integer NOT NULL,
    id text NOT NULL,
    name text NOT NULL,
    entityId text NOT NULL,
    merkleRoot text, 
    merkleTreeUri text
);

ALTER TABLE ONLY census
    ADD CONSTRAINT census_pkey PRIMARY KEY (id);

ALTER TABLE ONLY census
    ADD CONSTRAINT census_filterId_fkey FOREIGN KEY (filterId) REFERENCES filters(id);

ALTER TABLE ONLY census
    ADD CONSTRAINT census_entityId_fkey FOREIGN KEY (entityId) REFERENCES entities(id);
