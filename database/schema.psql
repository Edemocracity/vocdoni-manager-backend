-- NOTE
-- pgcrpyto is assumed to be enabled in public needing superuser access
-- CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--------------------------- TABLES DEFINITION
-------------------------------- -------------------------------- -------------------------------- 

--------------------------- ENTITTIES

CREATE TABLE entities (
    updatedAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    createdAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id text NOT NULL ,
    address text NOT NULL,
    email text,
    name text,
    managersPublicKeys text[] NOT NULL
);

ALTER TABLE ONLY entities
    ADD CONSTRAINT entity_pkey PRIMARY KEY (id);

ALTER TABLE ONLY entities
    ADD CONSTRAINT entity_address_unique UNIQUE (address);

--------------------------- USERS

CREATE TABLE users (
    updatedAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    createdAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    publicKey text NOT NULL, 
    digestedPublicKey text NOT NULL
    --TODO: CONSTRAINT sizes of address
);

ALTER TABLE ONLY users
    ADD CONSTRAINT user_pkey PRIMARY KEY (publicKey);

ALTER TABLE ONLY users
    ADD CONSTRAINT users_digestedPublickKey_unique UNIQUE (digestedPublicKey);

--------------------------- MEMBERS

CREATE TYPE origin AS ENUM (
    'Token',
    'Form',
    'DB'
);

CREATE TABLE members (
    updatedAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    createdAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    entityId text,
    publicKey text, 
    streetAddress text,
    firstName text,
    lastName text,
    email text,
    phone text,
    dateOfBirth timestamp with time zone,
    origin origin,
    consented boolean DEFAULT false NOT NULL,
    verified timestamp with time zone
    --TODO: add JSONB with optional fields
    --TODO: CONSTRAINT sizes of address
);

ALTER TABLE ONLY members
    ADD CONSTRAINT members_pkey PRIMARY KEY (id);

ALTER TABLE ONLY members
    ADD CONSTRAINT members_entityId_fkey FOREIGN KEY (entityId) REFERENCES entities(id) ON DELETE CASCADE;

ALTER TABLE ONLY members
    ADD CONSTRAINT members_publicKey_fkey FOREIGN KEY (publicKey) REFERENCES users(publicKey); -- ON DELETE CASCADE? 

ALTER TABLE ONLY members
    ADD CONSTRAINT members_entityId_publicKey_unique UNIQUE (entityId, publicKey);

--------------------------- PUSHTOKEN

CREATE TABLE pushTokens (
    userId text NOT NULL,  
    createdAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    token text NOT NULL
);

ALTER TABLE pushTokens
  ADD CONSTRAINT pushTokens_pkey PRIMARY KEY (token);

ALTER TABLE ONLY pushTokens
    ADD CONSTRAINT pushTokens_userId_fkey FOREIGN KEY (userId) REFERENCES users(publicKey) ON DELETE CASCADE;

--------------------------- TARGETS

CREATE TABLE targets (
    updatedAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    createdAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id serial NOT NULL,
    entityId text NOT NULL,
    name text NOT NULL,
    filters jsonb NOT NULL
);

ALTER TABLE ONLY targets
    ADD CONSTRAINT targets_pkey PRIMARY KEY (id);

ALTER TABLE ONLY targets
    ADD CONSTRAINT targets_entityId_fkey FOREIGN KEY (entityId) REFERENCES entities(id) ON DELETE CASCADE;

--------------------------- CENSUS

CREATE TABLE census (
    updatedAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    createdAt timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    targetId integer NOT NULL,
    id text NOT NULL,
    name text NOT NULL,
    entityId text NOT NULL,
    merkleRoot text, 
    merkleTreeUri text
);

ALTER TABLE ONLY census
    ADD CONSTRAINT census_pkey PRIMARY KEY (id);

ALTER TABLE ONLY census
    ADD CONSTRAINT census_targetId_fkey FOREIGN KEY (targetId) REFERENCES targets(id);

ALTER TABLE ONLY census
    ADD CONSTRAINT census_entityId_fkey FOREIGN KEY (entityId) REFERENCES entities(id) ON DELETE CASCADE;

---------------------------- CENSUS MEMBERS

CREATE TABLE censusMembers (
  memberId uuid NOT NULL,
  censusId text NOT NULL
);

ALTER TABLE ONLY censusMembers
    ADD CONSTRAINT censusMembers_memberId_fkey FOREIGN KEY (memberId) REFERENCES members(id) ON DELETE CASCADE;

ALTER TABLE ONLY censusMembers
    ADD CONSTRAINT censusMembers_censusId_fkey FOREIGN KEY (censusId) REFERENCES census(id) ON DELETE CASCADE;