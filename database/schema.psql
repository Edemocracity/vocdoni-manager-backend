-- NOTE
-- pgcrpyto is assumed to be enabled in public needing superuser access
-- CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--------------------------- TABLES DEFINITION
-------------------------------- -------------------------------- -------------------------------- 

--------------------------- ENTITTIES

CREATE TABLE entities (
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id text NOT NULL ,
    address text NOT NULL,
    email text,
    name text,
    managers_public_keys text[] NOT NULL
);

ALTER TABLE ONLY entities
    ADD CONSTRAINT entities_pkey PRIMARY KEY (id);

ALTER TABLE ONLY entities
    ADD CONSTRAINT entities_address_unique UNIQUE (address);

--------------------------- USERS

CREATE TABLE users (
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    public_key text NOT NULL, 
    digested_public_key text NOT NULL
    --TODO: CONSTRAINT sizes of address
);

ALTER TABLE ONLY users
    ADD CONSTRAINT users_pkey PRIMARY KEY (public_key);

ALTER TABLE ONLY users
    ADD CONSTRAINT users_digested_public_key_unique UNIQUE (digested_public_key);

--------------------------- MEMBERS

CREATE TYPE origin AS ENUM (
    'Token',
    'Form',
    'DB'
);

CREATE TABLE members (
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id uuid DEFAULT public.gen_random_uuid() NOT NULL,
    entity_id text,
    public_key text, 
    street_address text,
    first_name text,
    last_name text,
    email text,
    phone text,
    date_of_birth timestamp with time zone,
    origin origin,
    consented boolean DEFAULT false NOT NULL,
    verified timestamp with time zone
    --TODO: add JSONB with optional fields
    --TODO: CONSTRAINT sizes of address
);

ALTER TABLE ONLY members
    ADD CONSTRAINT members_pkey PRIMARY KEY (id);

ALTER TABLE ONLY members
    ADD CONSTRAINT members_entity_id_fkey FOREIGN KEY (entity_id) REFERENCES entities(id) ON DELETE CASCADE;

ALTER TABLE ONLY members
    ADD CONSTRAINT members_public_key_fkey FOREIGN KEY (public_key) REFERENCES users(public_key); -- ON DELETE CASCADE? 

ALTER TABLE ONLY members
    ADD CONSTRAINT members_entity_id_public_key_unique UNIQUE (entity_id, public_key);

--------------------------- PUSHTOKEN

CREATE TABLE push_tokens (
    user_id text NOT NULL,  
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    token text NOT NULL
);

ALTER TABLE push_tokens
  ADD CONSTRAINT push_tokens_pkey PRIMARY KEY (token);

ALTER TABLE ONLY push_tokens
    ADD CONSTRAINT push_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES users(public_key) ON DELETE CASCADE;

--------------------------- TARGETS

CREATE TABLE targets (
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    id serial NOT NULL,
    entity_id text NOT NULL,
    name text NOT NULL,
    filters jsonb NOT NULL
);

ALTER TABLE ONLY targets
    ADD CONSTRAINT targets_pkey PRIMARY KEY (id);

ALTER TABLE ONLY targets
    ADD CONSTRAINT targets_entity_id_fkey FOREIGN KEY (entity_id) REFERENCES entities(id) ON DELETE CASCADE;

--------------------------- CENSUS

CREATE TABLE censuses (
    updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    created_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    target_id integer NOT NULL,
    id text NOT NULL,
    name text NOT NULL,
    entity_id text NOT NULL,
    merkle_root text, 
    merkle_tree_uri text
);

ALTER TABLE ONLY censuses
    ADD CONSTRAINT censuses_pkey PRIMARY KEY (id);

ALTER TABLE ONLY censuses
    ADD CONSTRAINT censuses_target_id_fkey FOREIGN KEY (target_id) REFERENCES targets(id);

ALTER TABLE ONLY censuses
    ADD CONSTRAINT censuses_entity_id_fkey FOREIGN KEY (entity_id) REFERENCES entities(id) ON DELETE CASCADE;

---------------------------- CENSUS MEMBERS

CREATE TABLE census_members (
  member_id uuid NOT NULL,
  census_id text NOT NULL
);

ALTER TABLE ONLY census_members
    ADD CONSTRAINT census_members_pkey PRIMARY KEY (member_id, census_id);

ALTER TABLE ONLY census_members
    ADD CONSTRAINT census_members_member_id_fkey FOREIGN KEY (member_id) REFERENCES members(id) ON DELETE CASCADE;

ALTER TABLE ONLY census_members
    ADD CONSTRAINT census_members_census_id_fkey FOREIGN KEY (census_id) REFERENCES censuses(id) ON DELETE CASCADE;